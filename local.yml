version: "3"

volumes:
  local_postgres_data: {}
  local_postgres_data_backups: {}

services:
  django: &django
    build:
      context: .
      dockerfile: ./compose/local/django/Dockerfile
    image: itez_local_django
    restart: always
    container_name: django
    depends_on:
      - db
      # - mailhog
    links:
      - db
    volumes:
      - .:/app:z
    env_file:
      - ./.envs/.local/.django
      - ./.envs/.local/.postgres
    ports:
      - "8000:8000"
    command: /start

  db:
    image: kartoza/postgis:9.6-2.4
    restart: always
    container_name: db
    volumes:
      - local_postgres_data:/var/lib/postgresql/data:Z
    environment:
      - ALLOW_IP_RANGE=0.0.0.0/0
      - POSTGRES_USER=docker
      - POSTGRES_PASS=docker
      - POSTGRES_DBNAME=itez
      - POSTGRES_MULTIPLE_EXTENSIONS=postgis,hstore,postgis_topology,postgis_raster,pgrouting
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U docker"]
      timeout: 10s
      retries: 5
    ports:
      - "5432:5432"

  # docs:
  #   image: itez_local_docs
  #   container_name: docs
  #   build:
  #     context: .
  #     dockerfile: ./compose/local/docs/Dockerfile
  #   env_file:
  #     - ./.envs/.local/.django
  #   volumes:
  #     - ./docs:/docs:z
  #     - ./config:/app/config:z
  #     - ./itez:/app/itez:z
  #   ports:
  #     - "7000:7000"
  #   command: /start-docs

#   mailhog:
#     image: mailhog/mailhog:v1.0.0
#     container_name: mailhog
#     ports:
#       - "8025:8025"

  redis:
    image: redis:6
    container_name: redis

  celeryworker:
    <<: *django
    image: itez_local_celeryworker
    restart: always
    container_name: celeryworker
    depends_on:
      - db
      - redis
#       - mailhog
    ports: []
    command: /start-celeryworker

  celerybeat:
    <<: *django
    image: itez_local_celerybeat
    container_name: celerybeat
    depends_on:
      - db
      - redis
#       - mailhog
    ports: []
    command: /start-celerybeat

  flower:
    <<: *django
    image: itez_local_flower
    restart: always
    container_name: flower
    ports:
      - "5555:5555"
    command: /start-flower
